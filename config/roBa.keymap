#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        bt0: bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>;

            label = "BT0";
        };

        bt1: bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>,
                <&tog_on 1>;

            label = "BT1";
        };

        bt2: bt2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 2>,
                <&macro_wait_time 500>,
                <&tog_on 1>;

            label = "BT2";
        };

        bt3: bt3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 3>,
                <&macro_wait_time 500>;

            label = "BT3";
        };
    };

    behaviors {
        tdQE: td_Q_ESC {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Q_ESC";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp ESC>;

            tapping-term-ms = <200>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            label = "Toggle Layer ON";
            #binding-cells = <1>;
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            label = "Toggle Layer Off";
            #binding-cells = <1>;
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAC_LAYER {
            bindings = <
&tdQE       &kp W  &kp E  &kp R             &kp T                                                    &kp Y             &kp U  &lt 5 I    &kp O    &kp P
&kp A       &kp S  &kp D  &lt 4 F           &kp G             &none                 &none            &kp H             &kp J  &kp K      &kp L    &lt 4 MINUS
&mt LALT Z  &kp X  &kp C  &kp V             &kp B             &none                 &none            &kp N             &kp M  &kp COMMA  &kp DOT  &kp SLASH
&none       &none  &none  &mt LEFT_WIN TAB  &lt 2 LANGUAGE_2  &mt LSHIFT SPACE      &mt LCTRL ENTER  &lt 3 LANGUAGE_1                             &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        WIN_LAYER {
            bindings = <
&tdQE       &kp W  &kp E  &kp R          &kp T                                                  &kp Y       &kp U  &lt 5 I    &kp O    &kp P
&kp A       &kp S  &kp D  &lt 4 F        &kp G       &none                 &none                &kp H       &kp J  &kp K      &kp L    &lt 4 MINUS
&mt LALT Z  &kp X  &kp C  &kp V          &kp B       &none                 &none                &kp N       &kp M  &kp COMMA  &kp DOT  &kp SLASH
&none       &none  &none  &mt LCTRL TAB  &lt 2 INT5  &mt LSHIFT SPACE      &mt RIGHT_WIN ENTER  &lt 3 INT4                             &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp EXCL  &kp LBKT  &kp HASH  &kp DLLR  &kp PRCNT                      &kp EQUAL  &kp CARET  &kp PLUS  &kp UNDER  &kp LS(INT3)
&kp STAR  &kp LPAR  &kp RBRC  &kp PIPE  &kp AT     &trans      &trans  &kp COLON  &kp DQT    &kp SEMI  &kp SQT    &kp INT3
&kp LT    &kp GT    &kp RBKT  &kp BSLH  &kp AMPS   &trans      &trans  &kp MINUS  &kp SLASH  &trans    &trans     &kp LS(INT1)
&trans    &trans    &trans    &trans    &trans     &trans      &trans  &trans                                     &trans
            >;
        };

        NUM_FUN_ARROW {
            bindings = <
&kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5                      &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
&kp F2           &kp F4           &kp F6           &kp F7           &kp F10          &trans      &trans  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp SQT
&kp F12          &none            &none            &none            &none            &trans      &trans  &kp HOME         &kp PG_DN        &kp PG_UP        &kp END          &kp SLASH
&trans           &trans           &trans           &trans           &trans           &trans      &trans  &trans                                                              &kp DEL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &mkp MB3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &mo 5   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &mkp MB5  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ADJUST {
            bindings = <
&kp ESCAPE       &bt0    &bt1    &bt2           &bt3                           &none   &none  &none  &none  &bt BT_CLR
&kp LA(LC(DEL))  &none   &none   &none          &none      &trans      &trans  &none   &none  &none  &none  &none
&kp LS(LC(ESC))  &none   &none   &kp LS(LG(S))  &kp LG(L)  &trans      &trans  &none   &none  &none  &none  &none
&trans           &trans  &trans  &trans         &trans     &trans      &trans  &trans                       &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ADJUST {
            if-layers = <2 3>;
            then-layer = <6>;
        };
    };
};
