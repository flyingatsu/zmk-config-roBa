#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W  &kp E  &kp R          &kp T                                                  &kp Y       &kp U  &lt 5 I    &kp O    &kp P
&kp A       &kp S  &kp D  &lt 4 F        &kp G       &none                 &none                &kp H       &kp J  &kp K      &kp L    &lt 4 MINUS
&mt LALT Z  &kp X  &kp C  &kp V          &kp B       &none                 &none                &kp N       &kp M  &kp COMMA  &kp DOT  &kp SLASH
&none       &none  &none  &mt LCTRL TAB  &lt 1 INT5  &mt LSHIFT SPACE      &mt RIGHT_WIN ENTER  &lt 2 INT4                             &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                      &kp CARET  &kp AMPS   &kp TILDE  &kp EQUAL  &kp PIPE
&kp LPAR  &kp RPAR  &kp LBRC  &kp RBRC  &kp DQT    &trans      &trans  &kp PLUS   &kp ASTRK  &kp SEMI   &kp COLON  &kp INT3
&kp LT    &kp GT    &kp LBKT  &kp RBKT  &kp SQT    &trans      &trans  &kp MINUS  &kp SLASH  &trans     &trans     &kp UNDER
&trans    &trans    &trans    &trans    &trans     &trans      &trans  &trans                                      &trans
            >;
        };

        NUM_FUN_ARROW {
            bindings = <
&kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5                      &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
&kp F2           &kp F4           &kp F6           &kp F7           &kp F10          &trans      &trans  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp COLON
&kp F12          &none            &none            &none            &none            &trans      &trans  &kp HOME         &kp PG_DN        &kp PG_UP        &kp END          &kp SLASH
&trans           &trans           &trans           &trans           &trans           &trans      &trans  &trans                                                              &kp DEL
            >;
        };

        ADJUST {
            bindings = <
&kp ESCAPE       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3                      &none   &none  &none  &none  &bt BT_CLR
&kp LA(LC(DEL))  &none         &none         &none          &none         &trans      &trans  &none   &none  &none  &none  &none
&kp LS(LC(ESC))  &none         &none         &kp LS(LG(S))  &kp LG(L)     &trans      &trans  &none   &none  &none  &none  &none
&trans           &trans        &trans        &trans         &trans        &trans      &trans  &trans                       &none
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &mkp MB3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &mo 5   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &mkp MB5  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ADJUST {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
